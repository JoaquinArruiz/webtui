<column gap-="1" align-="center" id="twofa-contents">
  <span>Enter your 2FA code</span>
  <row id="number-container">
    <label box-="round">
      <input maxlength="1" />
    </label>
    <label box-="round">
      <input maxlength="1" />
    </label>
    <label box-="round">
      <input maxlength="1" />
    </label>
    <label box-="round">
      <input maxlength="1" />
    </label>
    <label box-="round">
      <input maxlength="1" />
    </label>
    <label box-="round">
      <input maxlength="1" />
    </label>
  </row>
  <row gap-="2" align-="center">
    <row gap-="1">
      <span is-="badge" variant-="foreground1">ESC</span>
      <span>Back</span>
    </row>
    <row gap-="1">
      <span is-="badge" variant-="foreground1">P</span>
      <span>Paste</span>
    </row>
    <row gap-="1">
      <span is-="badge" variant-="foreground1">Enter</span>
      <span>Verify</span>
    </row>
  </row>
</column> 

<style is:global>
  #number-container {
    label {
      padding: 1lh 2ch;
      --box-border-color: var(--background2);
    }
    input {
      max-width: 1ch !important;
      min-width: 1ch !important;
      padding: 0 !important;
      background-color: var(--background0);
    }
  }
</style>

<script>
  import { paginateElements } from "@/utils/vim";

  const numberedInputs = document.querySelectorAll("#number-container label input") as NodeListOf<HTMLInputElement>;

  numberedInputs.forEach((input) => {
    input.addEventListener("keydown", (e) => {
      const { next, prev } = paginateElements(input, numberedInputs);

      if(e.key === "ArrowLeft") {
        prev.focus();
      }

      if(e.key === "ArrowRight") {
        next.focus();
      }

      if(/^\d$/.test(e.key)) {
        e.preventDefault();
        input.value = e.key;
        next.focus();
      }

      if(e.key === "Backspace") {
        e.preventDefault();
        input.value = "";
        prev.focus();
      }
    });
  });

  const rightPanel: HTMLElement = document.getElementById("right-panel")!;

  new MutationObserver(() => {
    const active = rightPanel.getAttribute("data-active");

    if(active === "twofa-contents") {
      numberedInputs[0].focus();
    }
  }).observe(rightPanel, {
    attributes: true,
    attributeFilter: ["data-active"],
  });

  (document.querySelector("#twofa-contents") as HTMLDivElement).addEventListener("keydown", (e) => {
    if(e.key === "Escape") {
      rightPanel.setAttribute("data-active", "login-contents");
    }

    if(e.key === "Enter") {
      e.preventDefault();
      alert("Login complete [placeholder]");
    }

    if(e.key === "p") {
      alert("Not implemented for this example");
    }
  });
</script>
